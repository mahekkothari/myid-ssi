import { DIDResolutionOptions, DIDResolver } from 'did-resolver';
declare enum SupportedVerificationMethods {
    'JsonWebKey2020' = 0,
    'Multikey' = 1,
    'EcdsaSecp256k1VerificationKey2019' = 2,// deprecated,
    'EcdsaSecp256k1VerificationKey2020' = 3,
    'Ed25519VerificationKey2020' = 4,
    'Ed25519VerificationKey2018' = 5,// deprecated,
    'X25519KeyAgreementKey2020' = 6,
    'X25519KeyAgreementKey2019' = 7,// deprecated,
    'EcdsaSecp256r1VerificationKey2019' = 8
}
export type DIDKeyResolverOptions = DIDResolutionOptions & {
    enableEncryptionKeyDerivation?: boolean;
    publicKeyFormat?: keyof typeof SupportedVerificationMethods;
};
export declare const didPrefixMap: Record<string, Function>;
/**
 * Provides a mapping to a did:key resolver, usable by {@link did-resolver#Resolver}.
 *
 * @public
 */
export declare function getDidKeyResolver(): {
    key: DIDResolver;
};
export {};
//# sourceMappingURL=resolver.d.ts.map