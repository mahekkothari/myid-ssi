import type { IDIDDocumentServiceDescriptor, IDIDDocumentVerificationMethod } from "./interfaces.js";
export declare const assert: (exp: boolean, message: string) => void;
export declare const base64: {
    encode: (unencoded: any) => string;
    decode: (encoded: any) => Uint8Array;
};
export declare const utf8: {
    encode: (unencoded: string) => Uint8Array;
    decode: (encoded: Uint8Array) => string;
};
export declare const base64url: {
    encode: (unencoded: any) => string;
    decode: (encoded: any) => Uint8Array;
};
export declare const encodeService: (service: IDIDDocumentServiceDescriptor) => string;
export declare const decodeService: (did: string, service: string, metadata: Record<string, any>) => IDIDDocumentServiceDescriptor;
export declare const isPeerDID: (did: string) => boolean;
export declare const createDIDDocument: (did: string, authKeys: IDIDDocumentVerificationMethod[], encKeys: IDIDDocumentVerificationMethod[], services: IDIDDocumentServiceDescriptor[]) => any;
