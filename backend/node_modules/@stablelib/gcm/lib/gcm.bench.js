"use strict";
// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(exports, "__esModule", { value: true });
const aes_1 = require("@stablelib/aes");
const gcm_1 = require("./gcm");
const benchmark_1 = require("@stablelib/benchmark");
const buf8192 = (0, benchmark_1.byteSeq)(8192);
const buf1111 = (0, benchmark_1.byteSeq)(1111);
const buf0 = new Uint8Array(0);
const key = (0, benchmark_1.byteSeq)(32);
const nonce = (0, benchmark_1.byteSeq)(12);
const cipher = new aes_1.AES(key);
const gcm = new gcm_1.GCM(cipher);
(0, benchmark_1.report)("AES-GCM seal 8K", (0, benchmark_1.benchmark)(() => gcm.seal(nonce, buf8192), buf8192.length));
(0, benchmark_1.report)("AES-GCM seal 1111", (0, benchmark_1.benchmark)(() => gcm.seal(nonce, buf1111), buf1111.length));
(0, benchmark_1.report)("AES-GCM seal 8K + AD", (0, benchmark_1.benchmark)(() => gcm.seal(nonce, buf8192, buf8192), buf8192.length * 2));
(0, benchmark_1.report)("AES-GCM seal 1111 + AD", (0, benchmark_1.benchmark)(() => gcm.seal(nonce, buf1111, buf1111), buf1111.length * 2));
(0, benchmark_1.report)("AES-GCM seal 0 + AD 8K", (0, benchmark_1.benchmark)(() => gcm.seal(nonce, buf0, buf8192), buf8192.length));
const sealed8192 = gcm.seal(nonce, buf8192);
const sealed1111 = gcm.seal(nonce, buf1111);
const sealed8192ad = gcm.seal(nonce, buf8192, buf8192);
const sealed1111ad = gcm.seal(nonce, buf1111, buf1111);
(0, benchmark_1.report)("AES-GCM open 8K", (0, benchmark_1.benchmark)(() => gcm.open(nonce, sealed8192), buf8192.length));
(0, benchmark_1.report)("AES-GCM open 1111", (0, benchmark_1.benchmark)(() => gcm.open(nonce, sealed1111), buf1111.length));
(0, benchmark_1.report)("AES-GCM open 8K + AD", (0, benchmark_1.benchmark)(() => gcm.open(nonce, sealed8192ad, buf8192), buf8192.length * 2));
(0, benchmark_1.report)("AES-GCM open 1111 + AD", (0, benchmark_1.benchmark)(() => gcm.seal(nonce, sealed1111ad, buf1111), buf1111.length * 2));
sealed8192[0] ^= sealed8192[0];
(0, benchmark_1.report)("AES-GCM open (bad)", (0, benchmark_1.benchmark)(() => gcm.open(nonce, sealed8192), buf8192.length));
//# sourceMappingURL=gcm.bench.js.map